{"version":3,"file":"static/js/async/src_react_prosemirror-markdown_ts.js","sources":["/workspaces/minecraft-web-client/src/react/prosemirror-markdown.ts"],"sourcesContent":["import { EditorView } from 'prosemirror-view'\r\nimport { EditorState } from 'prosemirror-state'\r\nimport { schema, defaultMarkdownParser, defaultMarkdownSerializer } from 'prosemirror-markdown'\r\nimport { exampleSetup, buildMenuItems } from 'prosemirror-example-setup'\r\nimport { MarkSpec } from 'prosemirror-model'\r\nimport { toggleMark } from 'prosemirror-commands'\r\n\r\nexport class ProseMirrorView {\r\n  view\r\n\r\n  constructor (target, content) {\r\n    console.log('schema.marks', schema.marks)\r\n    //@ts-expect-error\r\n    schema.marks.textColor = {\r\n      spec: {\r\n        attrs: { color: {} },\r\n        inline: true,\r\n        parseDOM: [\r\n          {\r\n            style: 'color',\r\n            getAttrs: value => ({ color: value })\r\n          }\r\n        ],\r\n        toDOM: mark => ['span', { style: `color: ${mark.attrs.color}` }, 0]\r\n      },\r\n    }\r\n\r\n    const fullMenu = buildMenuItems(schema).fullMenu as Array<Array<import('prosemirror-menu').MenuItem>>\r\n    fullMenu[0] = fullMenu[0].filter(item => item.spec.title !== 'Add or remove link' && item.spec.title !== 'Toggle code font')\r\n    fullMenu.splice(3, 1); // remove the insert list, quote & checkbox menu\r\n    (fullMenu[1][0] as any).options.label = 'Color' // check-build error: fullMenu[1][0].options.label = 'Color'\r\n    // fullMenu[1][0].content[0].spec.label = 'Red'\r\n    // fullMenu[1][0].content[0].spec.run = (state, dispatch, view) => {\r\n    // console.log('state', state)\r\n    // // make <p style=\"color: red\">...</p>\r\n    // const { from, to } = state.selection\r\n    // const { tr } = state\r\n    // console.log(schema.marks)\r\n    // tr.addMark(from, to, schema.marks.textColor.create({ color: 'red' }))\r\n    // dispatch(tr)\r\n    //   toggleMark(schema.marks.textColor, { color: 'red' })(state, dispatch, view)\r\n    // }\r\n    fullMenu[1].splice(1, 1) // remove the type menu\r\n    console.log('fullMenu', fullMenu)\r\n    this.view = new EditorView(target, {\r\n      state: EditorState.create({\r\n        doc: defaultMarkdownParser.parse(content) ?? undefined,\r\n        plugins: exampleSetup({\r\n          schema,\r\n          menuContent: fullMenu,\r\n        }),\r\n      }),\r\n      attributes (state) {\r\n        return {\r\n          autocorrect: 'off',\r\n          autocapitalize: 'off',\r\n          spellcheck: 'false',\r\n          autofocus: 'true',\r\n        }\r\n      },\r\n    })\r\n  }\r\n\r\n  get content () {\r\n    const content = defaultMarkdownSerializer.serialize(this.view.state.doc)\r\n    console.log('content', content)\r\n    return content\r\n  }\r\n\r\n  focus () {\r\n    this.view.focus()\r\n  }\r\n\r\n  destroy () {\r\n    this.view.destroy()\r\n  }\r\n}\r\n"],"names":["EditorView","EditorState","schema","defaultMarkdownParser","defaultMarkdownSerializer","exampleSetup","buildMenuItems","ProseMirrorView","target","content","console","value","mark","fullMenu","item","undefined","state"],"mappings":";;;;;;;;;;;;;;;;;;AA4EC;AAAA;AAAA;AA5E4C;AACE;AACgD;AACvB;AAIjE,MAAMO;IAGX,YAAaC,MAAM,EAAEC,OAAO,CAAE;QAC5BC,QAAQ,GAAG,CAAC,gBAAgBR,8DAAY;QACxC,kBAAkB;QAClBA,wEAAsB,GAAG;YACvB,MAAM;gBACJ,OAAO;oBAAE,OAAO,CAAC;gBAAE;gBACnB,QAAQ;gBACR,UAAU;oBACR;wBACE,OAAO;wBACP,UAAUS,CAAAA,QAAU;gCAAE,OAAOA;4BAAM;oBACrC;iBACD;gBACD,OAAOC,CAAAA,OAAQ;wBAAC;wBAAQ;4BAAE,OAAO,CAAC,OAAO,EAAEA,KAAK,KAAK,CAAC,KAAK,CAAC,CAAC;wBAAC;wBAAG;qBAAE;YACrE;QACF;QAEA,MAAMC,WAAWP,yEAAcA,CAACJ,wDAAMA,EAAE,QAAQ;QAChDW,QAAQ,CAAC,EAAE,GAAGA,QAAQ,CAAC,EAAE,CAAC,MAAM,CAACC,CAAAA,OAAQA,KAAK,IAAI,CAAC,KAAK,KAAK,wBAAwBA,KAAK,IAAI,CAAC,KAAK,KAAK;QACzGD,SAAS,MAAM,CAAC,GAAG;QAAI,gDAAgD;QACtEA,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAS,OAAO,CAAC,KAAK,GAAG;QAAQ,4DAA4D;QAC5G,+CAA+C;QAC/C,oEAAoE;QACpE,8BAA8B;QAC9B,wCAAwC;QACxC,uCAAuC;QACvC,uBAAuB;QACvB,4BAA4B;QAC5B,wEAAwE;QACxE,eAAe;QACf,gFAAgF;QAChF,IAAI;QACJA,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG;QAAG,uBAAuB;QAChDH,QAAQ,GAAG,CAAC,YAAYG;QACxB,IAAI,CAAC,IAAI,GAAG,IAAIb,wDAAUA,CAACQ,QAAQ;YACjC,OAAOP,iEAAkB,CAAC;gBACxB,KAAKE,6EAA2B,CAACM,YAAYM;gBAC7C,SAASV,uEAAYA,CAAC;oBACpBH,MAAMA,0DAAAA;oBACN,aAAaW;gBACf;YACF;YACA,YAAYG,KAAK;gBACf,OAAO;oBACL,aAAa;oBACb,gBAAgB;oBAChB,YAAY;oBACZ,WAAW;gBACb;YACF;QACF;IACF;IAEA,IAAI,UAAW;QACb,MAAMP,UAAUL,qFAAmC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG;QACvEM,QAAQ,GAAG,CAAC,WAAWD;QACvB,OAAOA;IACT;IAEA,QAAS;QACP,IAAI,CAAC,IAAI,CAAC,KAAK;IACjB;IAEA,UAAW;QACT,IAAI,CAAC,IAAI,CAAC,OAAO;IACnB;AACF"}